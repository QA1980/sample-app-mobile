# Pre-Commit E2E Tests in iOS
name: Pre-Commit E2E Tests in iOS
# Controls when the action will run.
on: [push]
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      # Setup Node JS - 10.17.0
      - name: Set up Node JS 12x
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      # Clean Packages & Install Dependencies 
      - name: Clean Packages 
        run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json
      # Install React Native CLI
      - name: Install React Native CLI
        run: |
          npm install react-native-cli
      # List iOS Devices & Platforms      
      - name: List iOS Devices & Platforms        
        run: |          
          xcrun simctl list      
      # Install iOS 11.4 Runtime      
      - name: Install iOS 11.4 Runtime        
        run: |  
          gem install xcode-install
          xcversion simulators --install='iOS 11.4'      
      # Create and Boot iOS Emulator - iPhoneX on iOS 11.4, Update default appium config for iOS      
      - name: Create and Run iOS Emulator - iPhoneX on iOS 11.4, Update default appium config for iOS        
        run: |
           xcrun simctl create TestiPhoneX com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-11-4 > deviceid.txt 
           DEVICEUUID=`cat deviceid.txt`          
           echo $DEVICEUUID          
                     
           xcrun simctl boot $DEVICEUUID &
      # Use HTTPS repos
      - name: Use HTTPS repos
        run: |
          git config --global url."https://github".insteadOf ssh://git@github 
      # Install Repo and Dependencies
      - name: Install Repo and Dependencies
        run: |
          npm install --save-dev
      # Start the Appium Server
      - name: Start the Appium Server
        run: |
         chmod +x ./scripts/RunAppiumServer.sh # install and run appium server in the background
          ./scripts/RunAppiumServer.sh
      # Open Metro Bundler in Background
      - name: Open Metro Bundler in Background
        run: |
          node_modules/react-native/scripts/launchPackager.command &
      # Build iOS App and Run Tests
      - name: Build iOS App and Run Tests
        env:
          E2E_TEST_PLATFORM: 'ios'
          E2E_TEST_DEFAULTS: 'true'
          E2E_TEST_TAGS: 'E2E'
        run: |
          npx react-native run-ios
          #BUILT_APP=`find ~/Library/Developer/Xcode/DerivedData -name SwagLabsMobileApp.app | grep Build/Products/Debug-iphonesimulator/SwagLabsMobileApp.app`
          #mkdir -p ios/build/bookio/Build/Products/Debug-iphonesimulator
          #cp -R $BUILT_APP ios/build/booksio/Build/Products/Debug-iphonesimulator
          #sleep 30
          xcrun simctl bootstatus booted
          npm run ios.test.local.dev
      # Upload Appium Logs
      
